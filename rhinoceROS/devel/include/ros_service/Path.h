// Generated by gencpp from file ros_service/Path.msg
// DO NOT EDIT!


#ifndef ROS_SERVICE_MESSAGE_PATH_H
#define ROS_SERVICE_MESSAGE_PATH_H

#include <ros/service_traits.h>


#include <ros_service/PathRequest.h>
#include <ros_service/PathResponse.h>


namespace ros_service
{

struct Path
{

typedef PathRequest Request;
typedef PathResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Path
} // namespace ros_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ros_service::Path > {
  static const char* value()
  {
    return "43ede9fa4def9d8ab271ede42f88fcd9";
  }

  static const char* value(const ::ros_service::Path&) { return value(); }
};

template<>
struct DataType< ::ros_service::Path > {
  static const char* value()
  {
    return "ros_service/Path";
  }

  static const char* value(const ::ros_service::Path&) { return value(); }
};


// service_traits::MD5Sum< ::ros_service::PathRequest> should match 
// service_traits::MD5Sum< ::ros_service::Path > 
template<>
struct MD5Sum< ::ros_service::PathRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ros_service::Path >::value();
  }
  static const char* value(const ::ros_service::PathRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_service::PathRequest> should match 
// service_traits::DataType< ::ros_service::Path > 
template<>
struct DataType< ::ros_service::PathRequest>
{
  static const char* value()
  {
    return DataType< ::ros_service::Path >::value();
  }
  static const char* value(const ::ros_service::PathRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ros_service::PathResponse> should match 
// service_traits::MD5Sum< ::ros_service::Path > 
template<>
struct MD5Sum< ::ros_service::PathResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ros_service::Path >::value();
  }
  static const char* value(const ::ros_service::PathResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_service::PathResponse> should match 
// service_traits::DataType< ::ros_service::Path > 
template<>
struct DataType< ::ros_service::PathResponse>
{
  static const char* value()
  {
    return DataType< ::ros_service::Path >::value();
  }
  static const char* value(const ::ros_service::PathResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROS_SERVICE_MESSAGE_PATH_H
